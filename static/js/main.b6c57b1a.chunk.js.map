{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","shortid","require","FeedbackOptions","options","onLeaveFeedback","map","option","className","type","onClick","generate","Section","title","children","Notification","message","App","state","leaveFeedback","event","targetBtn","target","textContent","toLowerCase","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","positiveFeedback","Math","round","this","Object","keys","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2VAiBeA,EAfI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,OACZ,+BACE,sDACCC,IAAkB,WAASA,KAAyB,KAFvD,WCNAC,G,MAAUC,EAAQ,KAqBTC,EAnBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAAAC,GACX,OACE,wBACEC,UAAU,MACVC,KAAK,SACLC,QAASL,EAHX,SAMGE,GAFIN,EAAQU,kBCHVC,G,MATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAIN,UAAU,aAAd,SAA4BK,IAC3BC,OCAQC,G,MAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,MCIPC,E,4MACJC,MAAQ,CACNtB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPqB,cAAgB,SAAAC,GACd,IAAMC,EAAYD,EAAME,OAAOC,YAAYC,cAC3C,EAAKC,UAAS,SAAAC,GAAS,sBACpBL,EAAYK,EAAUL,GAAa,O,EAIxCM,mBAAqB,WACnB,MAA+B,EAAKT,MAE9BnB,EAFN,EAAQH,KAAR,EAAcC,QAAd,EAAuBC,IAGvB,OAAKC,GACI,G,EAKX6B,gCAAkC,WAChC,MAA+B,EAAKV,MAA5BtB,EAAR,EAAQA,KAAME,EAAd,EAAcA,IAAKD,EAAnB,EAAmBA,QACbgC,EAAmBC,KAAKC,MAAOnC,GAAQA,EAAOE,EAAMD,GAAY,KACtE,OAAOiC,KAAKC,MAAMF,I,4CAGpB,WACE,MAA+BG,KAAKd,MAA5BtB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,sBAAKU,UAAU,YAAf,UACE,cAAC,EAAD,CAASK,MAAM,wBAAf,SACE,cAAC,EAAD,CACET,QAAS6B,OAAOC,KAAKF,KAAKd,OAC1Bb,gBAAiB2B,KAAKb,kBAI1B,cAAC,EAAD,CAASN,MAAM,YAAf,SACGmB,KAAKL,qBACJ,cAAC,EAAD,CACE/B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOiC,KAAKL,mBACZ3B,mBAAoBgC,KAAKJ,kCAG3B,cAAC,EAAD,CAAcZ,QAAQ,+B,GAnDhBmB,IAAMC,WA2DTnB,IC7DfoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,mCACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.b6c57b1a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <ul>\r\n      <li>Good: {good}</li>\r\n      <li>Neutral: {neutral}</li>\r\n      <li>Bad: {bad}</li>\r\n      <li>Total: {total()}</li>\r\n      <li>\r\n        <span>Positive feedback:</span>\r\n        {positivePercentage() ? ` ${positivePercentage()}` : ' 0'}%\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport './FeedbackOptions.css';\r\n\r\nconst shortid = require('shortid');\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      {options.map(option => {\r\n        return (\r\n          <button\r\n            className=\"btn\"\r\n            type=\"button\"\r\n            onClick={onLeaveFeedback}\r\n            key={shortid.generate()}\r\n          >\r\n            {option}\r\n          </button>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import './Section.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h1 className=\"main-title\">{title}</h1>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import './Notification.css';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\nimport './components/Feedback/Feedback.css';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  leaveFeedback = event => {\n    const targetBtn = event.target.textContent.toLowerCase();\n    this.setState(prevState => ({\n      [targetBtn]: prevState[targetBtn] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n\n    const total = good + neutral + bad;\n    if (!total) {\n      return 0;\n    }\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good, bad, neutral } = this.state;\n    const positiveFeedback = Math.round((good / (good + bad + neutral)) * 100);\n    return Math.round(positiveFeedback);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div className=\"contaiter\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.leaveFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistic\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback}\n              positivePercentage={this.countPositiveFeedbackPercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <>\n      <App />\n    </>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}